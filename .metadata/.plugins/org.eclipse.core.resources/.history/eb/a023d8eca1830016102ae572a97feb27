import java.util.Hashtable;

public class LinkedListNode {

	LinkedListNode next = null;
	int data;

	public LinkedListNode(int d) {
		data = d;
	}

	public void appendToTail(int d) {
		LinkedListNode end = new LinkedListNode(d);
		LinkedListNode n = this;
		while (n.next != null) {
			n = n.next;
		}
		n.next = end;
	}

	public static LinkedListNode deleteLinkedListNode(LinkedListNode head, int d) {
		LinkedListNode n = head;

		if (n.data == d) {
			return head.next; // moved to head.
		}

		while (n.next != null) {
			if (n.next.data == d) {
				n.next = n.next.next;
				return head; // head didnt chanage
			}
		}
		return head;
	}

	public static void display(LinkedListNode n) {
		LinkedListNode current = n;

		while (current != null) {
			if (current.next == null) {
				System.out.print(current.data);

			} else {
				System.out.print(current.data + " --> ");
			}
			current = current.next;
		}
	}

	public static void removeDups(LinkedListNode n) {
		Hashtable table = new Hashtable();
		LinkedListNode prev = null;

		while (n != null) {
			if (table.containsKey(n.data)) {
				prev.next = n.next;
			} else {
				table.put(n.data, true);
				prev = n;
			}
			n = n.next;

		}
	}

}
