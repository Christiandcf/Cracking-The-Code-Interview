package practices;
/**
 * Created by Christian on 9/21/2016.
 */

import java.util.Arrays;
public class StringArrays {

	public static void main(String[] args) {
		// System.out.println(compress("aabcccccaaa"));
		char[][] ok = new char[][] { { 'a', 'b', 'c' }, { 'd', 'e', 'f' },
				{ 'g', 'h', 'i' },

		};

		// 1.7 S
		int[][] bomb = new int[][] { 
				{ 0, 1, 1 }, 
				{ 1, 0, 1 }, 
				{ 1, 1, 1 }
		};
		for (int i = 0; i < bomb.length; i++) { // row
			for (int j = 0; j < bomb[0].length; j++) { // columns
				System.out.print(bomb[i][j]);
			}
			System.out.println();
		}
	
		System.out.println();

		setter(bomb);
		
		for (int i = 0; i < bomb.length; i++) { // row
			for (int j = 0; j < bomb[0].length; j++) { // columns
				System.out.print(bomb[i][j]);
			}
			System.out.println();
		}
		
		
		//1.8 testing
		
		String str = "waterbottle";
		String str2 = "erbottlewat";
		
	//	System.out.println(isSubstring(str, str2));
		
		
	}

	//Sorting Array
	public static String sort (String s){
		char[] content = s.toCharArray();
		Arrays.sort(content);
		return new String(content);
	}
	// 1.8 Substring
	public static boolean permutation(String s, String s2){
	
		
		if(s.length() != s2.length()){
			return false;
		}
		System.out.println(s);
		System.out.println(s2);
		
		if(sort(s).equals(sort(s2))){
			return true;
		}
		
		return false;
	}
	
	// 1.7 MxN , if 0 is found set its row and column to 0
	public static void setter(int[][] matrix) {
		// boolean[][] flags = new boolean[matrix.length][matrix[0].length];

		boolean[] row = new boolean[matrix.length];
		boolean[] column = new boolean[matrix[0].length];
		// [row][column]

		for (int i = 0; i < matrix.length; i++) { // row
			for (int j = 0; j < matrix[0].length; j++) { // columns
				if (matrix[i][j] == 0) {
					row[i] = true;
					column[j] = true;
				}
			}
		}
		
		for (int i = 0; i < matrix.length; i++) { // row
			for (int j = 0; j < matrix[0].length; j++) { // columns
				if (row[i] || column[j]) {
					matrix[i][j] = 0;
				}
			}
		}
	}

	// 1.6 Rotates Array
	public static char[][] rotation(char[][] matrix, int n) {
		char[][] ret = new char[n][n];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				ret[i][j] = matrix[n - j - 1][i];
				System.out.print(ret[i][j]);
			}
			System.out.println();
		}

		return ret;
	}

	// 1.5
	public static String compress(String str) {
		String mystr = "";
		char last = str.charAt(0);
		int count = 1;
		int i = 0;
		for (i = 1; i < str.length(); i++) {
			if (str.charAt(i) == last) {
				count++;
			} else {
				mystr += last + "" + count;
				last = str.charAt(i);
				count = 1;
			}
		}

		return mystr + last + count;
	}

}