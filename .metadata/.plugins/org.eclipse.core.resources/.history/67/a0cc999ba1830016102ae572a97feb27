import java.util.Hashtable;

public class linkedList {
	
	public static void main(String[] args){
		Node n = new Node(0);
		
		n.appendToTail(1);
		n.appendToTail(2);
		n.appendToTail(3);
		n.appendToTail(3);
		n.appendToTail(4);

		Node.display(n);
		
		System.out.println();
		Node.removeDups(n);
		
		Node.display(n);

	}
	
	public static class Node {
		Node next = null;
		int data;

		public Node(int d) {
			data = d;
		}

		public void appendToTail(int d) {
			Node end = new Node(d);
			Node n = this;
			while (n.next != null) {
				n = n.next;
			}
			n.next = end;
		}
		
		public static Node deleteNode(Node head, int d){
			Node n = head;
			
			if(n.data == d){
				return head.next; //moved to head.
			}
			
			while (n.next != null){
				if(n.next.data == d){
					n.next = n.next.next;
					return head; //head didnt chanage
				}
			}
			return head;
		}
		
		public static void display(Node n){
			Node current = n;
			
			while (current != null){
				if(current.next == null){
					System.out.print(current.data);

				}else{ 
					System.out.print(current.data + " --> ");
				}
				current = current.next;
			}
		}
		
		public static void removeDups(Node n){
			Hashtable table = new Hashtable();
			Node prev = null;
			
			while (n != null){
				if(table.containsKey(n.data)){
					prev.next = n.next;
				}else{
					table.put(n.data, true);
					prev = n;
				}
				n = n.next;
				
			}
		}
		
		
		
		
	}
	
	
}
